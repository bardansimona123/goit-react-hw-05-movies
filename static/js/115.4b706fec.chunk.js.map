{"version":3,"file":"static/js/115.4b706fec.chunk.js","mappings":"uMAmCA,UAhCe,WACb,IAAAA,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA0CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEhCG,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,GAAC,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACR,OAAnBL,EAAEM,iBAAiBH,EAAAE,KAAA,EACIE,MAAM,mCAADC,OAAoCnB,IAAS,KAAD,EAA1D,OAARY,EAAQE,EAAAM,KAAAN,EAAAE,KAAA,EACKJ,EAASS,OAAO,KAAD,EAA5BR,EAAIC,EAAAM,KACVf,EAAiBQ,EAAKS,SAAU,wBAAAR,EAAAS,OAAA,GAAAb,EAAA,KACjC,gBALiBc,GAAA,OAAAjB,EAAAkB,MAAA,KAAAC,UAAA,KAOlB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJD,EAAAA,EAAAA,MAAA,QAAMG,SAAUxB,EAAasB,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SACEE,KAAK,OACLC,MAAOhC,EACPiC,SAAU,SAACtB,GAAC,OAAKV,EAASU,EAAEuB,OAAOF,MAAM,EACzCG,YAAY,wBAEdN,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAAQH,SAAC,eAExBC,EAAAA,EAAAA,KAAA,MAAAD,SACGxB,EAAcgC,KAAI,SAAAC,GAAK,OACtBR,EAAAA,EAAAA,KAAA,MAAAD,SAAoBS,EAAMC,OAAjBD,EAAME,GAAuB,QAKhD,C,sBCjCA,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBf,EAAQgB,EAAKhB,KAInB,CAHE,MAAOiB,GAEP,YADAN,EAAOM,EAET,CAEID,EAAKE,KACPR,EAAQV,GAERmB,QAAQT,QAAQV,GAAOoB,KAAKR,EAAOC,EAEvC,CAEe,SAASrC,EAAkB6C,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAO9B,UACX,OAAO,IAAIyB,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAG5B,MAAM6B,EAAME,GAEzB,SAASZ,EAAMZ,GACbQ,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQb,EAClE,CAEA,SAASa,EAAOY,GACdjB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASY,EACnE,CAEAb,OAAMc,EACR,GACF,CACF,C","sources":["components/Movies/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// src/components/Movies.jsx\nimport React, { useState } from 'react';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    const response = await fetch(`API_URL_FOR_SEARCH_MOVIES?query=${query}`); // Aici trebuie să înlocuiești cu URL-ul tău\n    const data = await response.json();\n    setSearchResults(data.results); // Asigură-te că structurezi corect datele\n  };\n\n  return (\n    <div>\n      <h1>Caută Filme</h1>\n      <form onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"Caută un film\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {searchResults.map(movie => (\n          <li key={movie.id}>{movie.title}</li> // Aici afișezi titlul filmului\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","searchResults","setSearchResults","handleSearch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","e","response","data","_context","prev","next","preventDefault","fetch","concat","sent","json","results","stop","_x","apply","arguments","_jsxs","children","_jsx","onSubmit","type","value","onChange","target","placeholder","map","movie","title","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}