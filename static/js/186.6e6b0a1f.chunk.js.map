{"version":3,"file":"static/js/186.6e6b0a1f.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.jsx","components/api.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <div>\n      <h3>Reviews</h3>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p><strong>Author:</strong> {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","const API_KEY = 'cc87d95dbbb46c6d0da6f726f3495047';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n// Obține filmele populare\nexport const getTrendingMovies = async () => {\n  const response = await fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data.results;\n};\n\n// Caută filme după cuvânt cheie\nexport const searchMovies = async (query) => {\n  const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`);\n  const data = await response.json();\n  return data.results;\n};\n\n// Obține detaliile unui film\nexport const getMovieDetails = async (id) => {\n  const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data;\n};\n\n// Obține informațiile despre actori\nexport const getMovieCredits = async (id) => {\n  const response = await fetch(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data.cast;\n};\n\n// Obține recenziile pentru un film\nexport const getMovieReviews = async (id) => {\n  const response = await fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data.results;\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","getMovieReviews","then","_jsxs","children","_jsx","length","map","review","author","content","id","API_KEY","BASE_URL","getMovieDetails","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee3","response","data","_context3","prev","next","fetch","concat","sent","json","abrupt","stop","_x2","apply","arguments","getMovieCredits","_ref4","_callee4","_context4","cast","_x3","_ref5","_callee5","_context5","results","_x4","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","fn","self","this","args","err","undefined"],"sourceRoot":""}