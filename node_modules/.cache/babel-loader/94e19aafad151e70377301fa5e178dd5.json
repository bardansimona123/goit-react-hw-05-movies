{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marius\\\\Documents\\\\GitHub\\\\goit-react-hw-05-movies\\\\src\\\\components\\\\Movies\\\\Movies.jsx\",\n  _s = $RefreshSig$();\n// src/components/Movies.jsx\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const handleSearch = async e => {\n    e.preventDefault();\n    const response = await fetch(`API_URL_FOR_SEARCH_MOVIES?query=${query}`); // Aici trebuie să înlocuiești cu URL-ul tău\n    const data = await response.json();\n    setSearchResults(data.results); // Asigură-te că structurezi corect datele\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Caut\\u0103 Filme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Caut\\u0103 un film\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: movie.title\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this) // Aici afișezi titlul filmului\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Movies, \"VFwsiAW9GwbDZxYvaagcJWf9HMk=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Movies","_s","query","setQuery","searchResults","setSearchResults","handleSearch","e","preventDefault","response","fetch","data","json","results","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","map","movie","title","id","_c","$RefreshReg$"],"sources":["C:/Users/Marius/Documents/GitHub/goit-react-hw-05-movies/src/components/Movies/Movies.jsx"],"sourcesContent":["// src/components/Movies.jsx\r\nimport React, { useState } from 'react';\r\n\r\nconst Movies = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch(`API_URL_FOR_SEARCH_MOVIES?query=${query}`); // Aici trebuie să înlocuiești cu URL-ul tău\r\n    const data = await response.json();\r\n    setSearchResults(data.results); // Asigură-te că structurezi corect datele\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Caută Filme</h1>\r\n      <form onSubmit={handleSearch}>\r\n        <input\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          placeholder=\"Caută un film\"\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n      <ul>\r\n        {searchResults.map(movie => (\r\n          <li key={movie.id}>{movie.title}</li> // Aici afișezi titlul filmului\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,mCAAkCR,KAAM,EAAC,CAAC,CAAC,CAAC;IAC1E,MAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCP,gBAAgB,CAACM,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC;EAClC,CAAC;;EAED,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBnB,OAAA;MAAMoB,QAAQ,EAAEb,YAAa;MAAAQ,QAAA,gBAC3Bf,OAAA;QACEqB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEnB,KAAM;QACboB,QAAQ,EAAGf,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC;MAAe;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFnB,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACPnB,OAAA;MAAAe,QAAA,EACGV,aAAa,CAACqB,GAAG,CAACC,KAAK,iBACtB3B,OAAA;QAAAe,QAAA,EAAoBY,KAAK,CAACC;MAAK,GAAtBD,KAAK,CAACE,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAAC,CAAC;MACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACjB,EAAA,CA9BID,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AAgCZ,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}